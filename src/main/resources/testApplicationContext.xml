<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/aop
                        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
>
    <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
        <property name="driverClass" value="com.mysql.cj.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost/test?characterEncoding=UTF-8" />
        <property name="username" value="root" />
        <property name="password" value="woals4815" />
    </bean>
    <bean id="PlatformTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <bean id="userDao" class="dao.UserDaoJdbc">
        <property name="dataSource" ref="dataSource" />
        <property name="sqlService" ref="sqlService" />
        <property name="sqlMap">
            <map>
                <entry key="add" value="insert into users(id, name, password, level, login, recommend, email) values(?, ?, ?, ?, ?, ?, ?)" />
                <entry key="get" value="select * from users where id = ?" />
                <entry key="getAll" value="select * from users" />
                <entry key="deleteAll" value="delete from users" />
                <entry key="getCount" value="select count(*) from users" />
                <entry key="update" value="update users set name=?, password=?, level=?, login=?, recommend=?, email=? where id =?" />
            </map>
        </property>
    </bean>
    <bean id="levelPolicy" class="service.EventLevelPolicy">
        <property name="userDao" ref="userDao" />
    </bean>
    <bean id="mailSender" class="service.DummyMailSender">
    </bean>
    <bean id="userService" class="service.UserServiceImpl">
        <property name="mailSender" ref="mailSender" />
        <property name="userDao" ref="userDao" />
        <property name="levelPolicy" ref="levelPolicy" />
    </bean>
    <bean id="message" class="beanFactory.MessageFactoryBean">
        <property name="text" value="Factory bean" />
    </bean>
    <bean id="transactionAdivce" class="proxy.TransactionAdvice">
        <property name="transactionManager" ref="PlatformTransactionManager" />
    </bean>
    <bean id="transactionPointcut" class="org.springframework.aop.aspectj.AspectJExpressionPointcut">
        <property name="expression" value="execution(* *..*ServiceImpl.update*(..))"/>
    </bean>
    <bean id="transactionAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
        <property name="advice" ref="transactionAdivce" />
        <property name="pointcut" ref="transactionPointcut" />
    </bean>
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />
    <bean id="sqlService" class="sqlService.SimpleSqlService">
        <property name="sqlMap">
            <map>
                <entry key="userGet" value="select * from users where id = ?" />
                <entry key="userAdd" value="insert into users(id, name, password, level, login, recommend, email) values(?, ?, ?, ?, ?, ?, ?)" />
            </map>
        </property>
    </bean>
    <aop:config>
        <aop:pointcut id="transactionPointcut" expression="execution(* *..*ServiceImpl.update*(..))"/>
        <aop:advisor advice-ref="transactionAdivce" pointcut-ref="transactionPointcut" />
    </aop:config>
</beans>